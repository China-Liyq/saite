@startuml
skinparam backgroundColor #EEEBDC

skinparam sequenceMessageAlign center
'skinparam monochrome reverse

skinparam sequence {
ParticipantBorderColor DeepSkyBlue
'ParticipantBackgroundColor DodgerBlue
ParticipantFontSize 17
'ParticipantFontColor #A9DCDF

}


participant "前端" as front
participant "运维系统" as omsys
participant "人机" as robot
participant "文件服务" as filesys
participant "阿里OSS" as oss

autonumber "<font color=blue><b>[##]"

note right front : 1.用户选择下载
front -> omsys: 用户-机器人-智能柜\n选择日期 -- 点击下载
activate front #DarkSalmon

omsys --[#red]> robot: 下发下载智能柜日志:机器人-->日期+智能柜SN

omsys --> omsys: 记录:机器人-智能柜-用户,状态：初始化

robot ---[#red]> omsys: 响应ack

robot -[#red]> omsys: 响应下载智能柜日志结果

note right front : 2.文件大小验证

robot --> robot: 人机与智能柜交互\n人机从智能柜获取到压缩日志后

robot -[#red]> omsys: 人机找运维核实文件是否需要上传

omsys --[#red]> robot: 响应ack

omsys -[#red]> robot: 运维答复人机文件是否需要上传结果

note right front : 3.文件上传

robot -[#red]> omsys: 获取上传/分块上传文件地址

omsys --[#red]> robot: 响应ACK

omsys -[#blue]> filesys: 请求上传/分块上传文件地址

filesys -[#blue]> omsys: 响应上传/分块上传地址

omsys -[#red]> robot: 发送指令：发送上传/分块上传地址

omsys -> omsys: 更新上传记录，状态：获取上传地址

robot --[#red]> omsys: 响应ACK

robot -> oss: 按上传/分块上传文件

robot -[#red]> omsys: 上报开始上传文件

omsys -> omsys: 更新上传记录，状态：上传文件中

robot --[#red]> omsys: 定时上报文件上传进度

robot -[#red]> omsys: 文件上传结束：上报上传文件结果

omsys --> filesys: 发送合并分开文件指令

filesys --> oss: 合并文件

oss --> filesys: 响应合并结果

filesys --> omsys: 响应合并结果

omsys -> omsys: 更新上传记录，状态：上传成功/失败

omsys -> front: 通知用户文件上传完毕，提醒本地下载
autonumber stop
|||
autonumber "<font color=blue><b>[##]"

@enduml